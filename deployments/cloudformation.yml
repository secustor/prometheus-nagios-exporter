---
AWSTemplateFormatVersion: '2010-09-09'

Description: >
  Nagios Prometheus exporter service for Operations & Reliability, runs on the existing ECS cluster.

Mappings:
  '027104099916':
    eu-west-1:
      VpcId: vpc-f3534591
      Cluster: arn:aws:ecs:eu-west-1:027104099916:cluster/operations-reliability
      HttpsListenerArn: arn:aws:elasticloadbalancing:eu-west-1:027104099916:listener/app/aws-c-Clust-OGWTT3O1FRLK/c99be4122757b30c/e1c47d1e3989d5f1
      ServiceRole: arn:aws:iam::027104099916:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS

Parameters:

  DockerRevision:
    Type: String
    Default: latest

Resources:

  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: prometheus-nagios-exporter
          Image: !Sub "nexus.in.ft.com:5000/operations-reliability/prometheus-nagios-exporter:${DockerRevision}"
          MemoryReservation: 256
          PortMappings:
            - ContainerPort: 9852
          LogConfiguration:
            LogDriver: awslogs
            Options:
                awslogs-group: /aws/ecs/operations-reliability/prometheus-nagios-exporter
                awslogs-region: !Ref AWS::Region

  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      Cluster: !FindInMap [!Ref "AWS::AccountId", !Ref "AWS::Region", "Cluster"]
      TaskDefinition: !Ref Task
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      Role: !FindInMap [!Ref "AWS::AccountId", !Ref "AWS::Region", "ServiceRole"]
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerPort: 9852
          ContainerName: prometheus-nagios-exporter

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !FindInMap [!Ref "AWS::AccountId", !Ref "AWS::Region", "VpcId"]
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200
      HealthCheckPath: /__gtg
      HealthCheckIntervalSeconds: 5
      HealthCheckTimeoutSeconds: 3
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 5

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !FindInMap [!Ref "AWS::AccountId", !Ref "AWS::Region", "HttpsListenerArn"]
      Priority: 9
      Conditions:
        - Field: host-header
          Values:
            - prometheus-nagios-exporter.in.ft.com
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward

  RegionalListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !FindInMap [!Ref "AWS::AccountId", !Ref "AWS::Region", "HttpsListenerArn"]
      Priority: 10
      Conditions:
        - Field: host-header
          Values:
            - !Sub "prometheus-nagios-exporter-${AWS::Region}.in.ft.com"
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/ecs/operations-reliability/prometheus-nagios-exporter
      RetentionInDays: 7
