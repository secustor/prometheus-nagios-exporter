---
AWSTemplateFormatVersion: '2010-09-09'

Description: >
  Nagios Prometheus exporter service for Operations & Reliability, runs on the existing ECS cluster.

Parameters:

  SplunkHecToken:
    Type: String
    Description: Find this at https://financialtimes.splunkcloud.com/en-GB/manager/financial_times_production/http-eventcollector.
    NoEcho: true

  DockerRevision:
    Type: String
    Default: latest

Resources:

  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: prometheus-nagios-exporter
          Image: !Sub "nexus.in.ft.com:5000/operations-reliability/prometheus-nagios-exporter:${DockerRevision}"
          MemoryReservation: 256
          PortMappings:
            - ContainerPort: 9942
          LogConfiguration:
            LogDriver: splunk
            Options:
              splunk-source: !Sub "prometheus-nagios-exporter-${AWS::Region}.in.ft.com"
              splunk-url: https://http-inputs-financialtimes.splunkcloud.com
              splunk-token: !Ref SplunkHecToken
              splunk-format: json
              splunk-gzip: true

  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      Cluster: !ImportValue "Prometheus-ECS-Cluster-Name"
      TaskDefinition: !Ref Task
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS"
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerPort: 9942
          ContainerName: prometheus-nagios-exporter

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !ImportValue "Prometheus-ECS-Cluster-VPC"
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200
      HealthCheckPath: /__gtg
      HealthCheckIntervalSeconds: 5
      HealthCheckTimeoutSeconds: 3
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 5

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !ImportValue "Prometheus-ECS-Cluster-HTTPS-Listener-Arn"
      Priority: 200
      Conditions:
        - Field: host-header
          Values:
            - prometheus-nagios-exporter.in.ft.com
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward

  RegionalListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !ImportValue "Prometheus-ECS-Cluster-HTTPS-Listener-Arn"
      Priority: 201
      Conditions:
        - Field: host-header
          Values:
            - !Sub "prometheus-nagios-exporter-${AWS::Region}.in.ft.com"
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
