# This file is a template, and might need editing before it works on your project.
image: golang:latest

variables:
  # Please edit to your GitLab project
  #REPO_NAME: gitlab.com/namespace/project
  REPO_NAME: $CI_SERVER_HOST/$CI_PROJECT_PATH

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - build
  - package
  - deploy

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  script:
    - go build -o $CI_PROJECT_DIR/target/prometheus-nagios-exporter -a cmd/exporter/main.go
  variables:
    # disable the support for linking C code. This allows us to use the binary in scratch with no system libraries
    CGO_ENABLED: 0
    # compile linux only
    GOOS: linux
  artifacts:
    expire_in: 1 week
    paths:
      - "target/prometheus-nagios-exporter"

package:container:image:
  stage: package
  extends: .kaniko_template
  variables:
    IMAGE_NAME: $CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG
  only:
    refs:
      - tags
      - master


# Templates
.kaniko_template:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/$DOCKER_FILE --destination $CI_REGISTRY_IMAGE/$IMAGE_NAME
  variables:
    DOCKER_FILE: Dockerfile
